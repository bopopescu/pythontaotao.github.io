<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>github+hexo搭建个人博客</title>
    <url>/2020/06/28/github-hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>前言：搭建个人博客也是心血来潮，很久之前就看到别人的博客很清新、简约、大气、时尚又装逼，嘿嘿。。。就想着自己折腾一个，奈何当时技术能力有限，连github都玩不转，当然以失败告终，最近又头脑发热，遂百度了n多资料，又开始了填（bei）坑(nue）之旅，而且能找到的资料大多仅仅就是搭建起来，作为一个强迫症患者，肯定不能忍受没有优化过的样子，所以本着搭建一个完整的博客并记录优化过程，如果你喜欢我博客的样子，参考此教程一定能够搭建起来差不多的样子。</p>
<p>我的博客：<a href="https://pythontaotao.github.io/">https://pythontaotao.github.io/</a></p>
<a id="more"></a>

<p><strong>什么是hexo?</strong></p>
<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h1 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h1><ul>
<li><p>Windows：下载并安装 <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">git</a>.</p>
</li>
<li><p>Mac：使用 <a href="http://mxcl.github.com/homebrew/" target="_blank" rel="noopener">Homebrew</a>, <a href="http://www.macports.org/" target="_blank" rel="noopener">MacPorts</a> 或者下载 <a href="http://sourceforge.net/projects/git-osx-installer/" target="_blank" rel="noopener">安装程序</a>。</p>
</li>
</ul>
<h1 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h1><p>下载地址：<a href="http://nodejs.cn/download/" target="_blank" rel="noopener">win 10下载v 14.4.0</a>            <a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">win 7下载v 12.18.0</a></p>
<p> 安装时，请勾选Add to PATH选项，其他步骤不明白可以百度安装教程<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDYvMjkvNERrcXVTeTdaMWpUMllSLnBuZw?x-oss-process=image/format,png" alt="version.png">  </p>
<p>查询版本如上，说明安装OK</p>
<h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>npm是NodeJS包管理工具，类似于python的pip</p>
<h1 id="在本地搭建个人站点"><a href="#在本地搭建个人站点" class="headerlink" title="在本地搭建个人站点"></a>在本地搭建个人站点</h1><p>4.1、新建一个文件夹，位置和名称都没有限制，我们这里新建D:/hexo</p>
<p>4.2、使用git的命令行工具，初始化文件夹（选中hexo文件夹，右键Git Bash Here）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo init hexo</span></span><br><span class="line">输出信息如下</span><br><span class="line">INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git</span><br><span class="line">Cloning into 'D:\hexo-new'...</span><br><span class="line">remote: Enumerating objects: 165, done.</span><br><span class="line">remote: Total 165 (delta 0), reused 0 (delta 0), pack-reused 165</span><br><span class="line">Receiving objects: 100% (165/165), 31.30 KiB | 124.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (79/79), done.</span><br><span class="line">Submodule 'themes/landscape' (https://github.com/hexojs/hexo-theme-landscape.git) registered for path 'themes/landscape'</span><br><span class="line">Cloning into 'D:/hexo-new/themes/landscape'...</span><br><span class="line">remote: Enumerating objects: 4, done.</span><br><span class="line">remote: Counting objects: 100% (4/4), done.</span><br><span class="line">remote: Compressing objects: 100% (4/4), done.</span><br><span class="line">remote: Total 1067 (delta 0), reused 0 (delta 0), pack-reused 1063</span><br><span class="line">Receiving objects: 100% (1067/1067), 3.22 MiB | 27.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (585/585), done.</span><br><span class="line">Submodule path 'themes/landscape': checked out '73a23c51f8487cfcd7c6deec96ccc7543960d350'</span><br><span class="line">INFO  Install dependencies</span><br><span class="line">npm WARN deprecated urix@0.1.0: Please see https://github.com/lydell/urix#deprecated</span><br><span class="line">npm WARN deprecated resolve-url@0.2.1: https://github.com/lydell/resolve-url#deprecated</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> ejs@2.7.4 postinstall D:\hexo-new\node_modules\ejs</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> node ./postinstall.js</span></span><br><span class="line"></span><br><span class="line">Thank you for installing EJS: built with the Jake JavaScript build tool (https://jakejs.com/)</span><br><span class="line"></span><br><span class="line">npm notice created a lockfile as package-lock.json. You should commit this file.</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.1.2 (node_modules\chokidar\node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.1.3: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;)</span><br><span class="line"></span><br><span class="line">added 253 packages from 450 contributors in 30.278s</span><br><span class="line"></span><br><span class="line">5 packages are looking for funding</span><br><span class="line">  run `npm fund` for details</span><br><span class="line"></span><br><span class="line">INFO  Start blogging with Hexo!</span><br></pre></td></tr></table></figure>



<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── .deploy #需要部署的文件</span><br><span class="line">├── node_modules #Hexo插件</span><br><span class="line">├── public #生成的静态网页文件</span><br><span class="line">├── scaffolds #模板</span><br><span class="line">├── source #博客正文和其他源文件, 404 favicon CNAME 等都应该放在这里</span><br><span class="line">| ├── _drafts #草稿</span><br><span class="line">| └── _posts #文章</span><br><span class="line">├── themes #主题</span><br><span class="line">├── _config.yml #全局配置文件</span><br><span class="line">└── package.json</span><br></pre></td></tr></table></figure>



<p>初始化完成后会看到有以上文件内容，就是我们博客的初始化文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd hexo</span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line">npm install=npm i。在git clone项目的时候，项目文件中并没有 node_modules文件夹，项目的依赖文件可能很大。直接执行，npm会根据package.json配置文件中的依赖配置下载安装</span><br></pre></td></tr></table></figure>

<p>在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。</p>
<p>为了描述方便，在以下说明中，将前者称为 <strong>站点配置文件</strong>， 后者称为 <strong>主题配置文件</strong>。</p>
<p>4.3、在本地进行测试</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo g</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo s</span></span><br><span class="line">Hexo is running at http://localhost:4000 . Press Ctrl+C to stop</span><br></pre></td></tr></table></figure>

<p>在浏览器输入<a href="http://localhost:4000，可以看到hexo博客最原始的样子">http://localhost:4000，可以看到hexo博客最原始的样子</a><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDYvMjkvWTdHSjJMeG1zMWE0clNDLnBuZw?x-oss-process=image/format,png" alt="bokechushihua.png"></p>
<p>4.4、hexo相关指令讲解（熟悉的小伙伴可以跳过这里）</p>
<p>a、<strong>init</strong> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo init [folder]</span><br></pre></td></tr></table></figure>

<p>新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。</p>
<p>b、<strong>new</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br><span class="line"></span><br><span class="line">$ hexo new &quot;post title with whitespace&quot;</span><br></pre></td></tr></table></figure>

<p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">_config.yml</a> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p>
<p>c、 <strong>generate</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo generate      生成静态文件。简写 $ hexo g</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-d</code>, <code>--deploy</code></td>
<td align="left">文件生成后立即部署网站,简写 hexo d</td>
</tr>
</tbody></table>
<p>d、<strong>server</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo server       启动服务器。默认情况下，访问网址为： http:&#x2F;&#x2F;localhost:4000&#x2F; </span><br><span class="line">                    简写 $ hexo  s</span><br></pre></td></tr></table></figure>

<p>e、<strong>version</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo version      显示Hexo 版本</span><br></pre></td></tr></table></figure>

<h1 id="修改配置文件，关联github上"><a href="#修改配置文件，关联github上" class="headerlink" title="修改配置文件，关联github上"></a>修改配置文件，关联github上</h1><p>5.1、先创建github的仓库，仓库名称前缀要和你的github名一样，忽略我这里的大小写问题，</p>
<p><img src="https://i.loli.net/2020/06/29/inSqXzLpEA7ZDjW.png" alt="sshpath.png"></p>
<p>新建成功后，复制仓库的ssh地址，后续修改配置文件需要使用</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDYvMjkvaW5TcVh6THBFQTdaRGpXLnBuZw?x-oss-process=image/format,png" alt="sshpath.png"></p>
<p><strong>5.2、安装和切换主题，重点来了哦！！！</strong></p>
<p>首先我们要找到自己喜欢的主题，在github上面搜索hexo-them，比较受欢迎的是Next和yilia这两个主题，以Next主题为例，如果你喜欢其他主题，也可以设置相对应的主题</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> hexo</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span></span><br></pre></td></tr></table></figure>

<p>安装完成后可以看到themes文件夹下面多了一个ngxt的文件夹，这个就是我们下载的next主题</p>
<p>5.3、修改主题配置文件，需要懂一些yaml的语法知识，不懂得自行百度下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo/_config.yml     #这个文件是整个博客站点的配置文件</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Extensions</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Plugins: https://hexo.io/plugins/</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Themes: https://hexo.io/themes/</span></span></span><br><span class="line">theme: next                            #使用next主题,这个相当于一个主题切换控制开关</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Deployment</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Docs: https://hexo.io/docs/deployment.html</span></span></span><br><span class="line">deploy:                                #将我们本地的代码部署到刚刚创建的仓库中</span><br><span class="line">  type: 'git'</span><br><span class="line">  repository: "git@github.com:pythonTaotao/pythonTaotao.github.io.git"</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>修改后在本地先测试一下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDYvMjkvTm5tOTVkZTRmY0NnWjdrLnBuZw?x-oss-process=image/format,png" alt="nextzhuti.png"></p>
<p>激动人心的时刻到了，上面就是我们最原始的next主题的样子，这个博客在本地测试已经没有问题了，现在要把它部署到github上面</p>
<p>5.4、发布博客</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>部署完成后，在github的setting中 可以看到自己的博客地址</p>
<p><a href="https://sm.ms/image/MPj7NZW8LAX6HS1" target="_blank"><img src="https://i.loli.net/2020/06/29/MPj7NZW8LAX6HS1.png" alt="githubpasge.png"></a></p>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>至于最后发布文章和自定义各种不同的主题，可自己去探索，至此所有的步骤都已经讲完，希望对你有所帮助。如遇到bug可留言。感谢阅读。下一节讲解如何美化我们搭建的hexo博客</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/06/28/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>测试修改功能<br>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>proxmox（pve）安装Win10系统虚拟机</title>
    <url>/2020/06/26/proxmox-pve-%E5%AE%89%E8%A3%85Win10%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h2 id="安装proxmox-ve"><a href="#安装proxmox-ve" class="headerlink" title="安装proxmox ve"></a>安装proxmox ve</h2><p>Proxmox VE是一个完整的企业虚拟化开源平台。借助内置的Web界面，您可以轻松管理虚拟机和容器，软件定义的存储和网络，高可用性集群以及单个解决方案上的多个现成工具。</p>
<a id="more"></a>

<p>官网地址：<a href="https://www.proxmox.com/en/downloads" target="_blank" rel="noopener">点击这里</a></p>
<p>中文社区：<a href="http://download.proxmox.wiki/iso/" target="_blank" rel="noopener">点击这里</a></p>
<p>科大镜像源：<a href="https://mirrors.ustc.edu.cn/proxmox/" target="_blank" rel="noopener">点击这里</a></p>
<p>官网地址较慢，可以选择其他两个镜像源下载<br><img src="https://i.loli.net/2020/06/28/sFmBqhRXHiJf3Vu.png" alt="pve官网下载地址截图.png"></p>
<h2 id="制作启动U盘"><a href="#制作启动U盘" class="headerlink" title="制作启动U盘"></a>制作启动U盘</h2><p>下载Rufus：<a href="http://rufus.ie/" target="_blank" rel="noopener">点击直达</a></p>
<p><img src="https://i.loli.net/2020/06/28/GPWf4KJa57lFz9s.png" alt="rufus界面.png"></p>
<p>Boot selection选择下载的proxmox ve的ISO镜像文件，Device选择自己的U盘，点击开始</p>
<p>制作完成后插到服务器启动，需提在服务器的BISO开启<strong>Inter-VT的虚拟化</strong>功能</p>
<h2 id="安装proxmox-ve-1"><a href="#安装proxmox-ve-1" class="headerlink" title="安装proxmox ve"></a>安装proxmox ve</h2><p>启动服务器，启动项选择U盘启动，即可进入下面界面</p>
<p><img src="https://i.loli.net/2020/06/28/JlKpT65M38F9ubj.png" alt="pve安装界面1.png"></p>
<p><img src="https://i.loli.net/2020/06/28/18v5qVbJ37nzirL.png" alt="pve安装设置时区.png"></p>
<p>然后输入管理员密码、设置主机名、IP地址、掩码和DNS，安装等待几分钟，具体时间根据机器配置而定，安装完成后会自动重启服务器，登录服务器的shell界面，和普通的linux系统一样</p>
<p>web控制台访问URL： http://&lt;ip地址&gt;:8006</p>
<p>用户名：root<br>密码: <code>your_passwd</code></p>
<p><img src="https://i.loli.net/2020/06/28/cUkravqmPx6XwZH.png" alt="pve的web登陆界面.png"></p>
<h2 id="通过pve安装Win10系统"><a href="#通过pve安装Win10系统" class="headerlink" title="通过pve安装Win10系统"></a>通过pve安装Win10系统</h2><ul>
<li>​      win10镜像文件  </li>
<li>​      virtual io win 驱动</li>
</ul>
<p>virtual io win 驱动下载地址：<a href="https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/" target="_blank" rel="noopener">点击直达</a>  具体版本的话最新的可以使用</p>
<p>如果这个地址下载太慢的话可以使用IDM下载，了解更多：<a href="https://www.52pojie.cn/thread-1013874-1-1.html" target="_blank" rel="noopener">点击直达</a></p>
<h4 id="上传镜像到pve"><a href="#上传镜像到pve" class="headerlink" title="上传镜像到pve"></a>上传镜像到pve</h4><p>数据中心——&gt; local存储——&gt; 内容——&gt; 上传——&gt; ISO镜像</p>
<p>或者直接FTP上传到<code>/var/lib/vz/template/iso</code>该目录下</p>
<p>需要上传win10镜像和virtual io win驱动</p>
<p><img src="https://i.loli.net/2020/06/28/2FxzvSNYR4yHWJw.png" alt="上传完镜像截图.png"></p>
<h4 id="创建win10虚拟机"><a href="#创建win10虚拟机" class="headerlink" title="创建win10虚拟机"></a>创建win10虚拟机</h4><p><img src="https://i.loli.net/2020/06/28/kVYp4ZW3jsw7Sze.png" alt="win10虚拟机硬件配置.png"></p>
<p>然后点击<strong>启动</strong>，即可看到下面的界面，一步一步进行安装即可</p>
<p><img src="https://i.loli.net/2020/06/28/KibldAOo2ThyRer.png" alt="启动win10界面.png"></p>
]]></content>
      <categories>
        <category>虚拟化</category>
      </categories>
      <tags>
        <tag>proxmox</tag>
        <tag>pve</tag>
        <tag>win10</tag>
        <tag>虚拟化</tag>
      </tags>
  </entry>
</search>
